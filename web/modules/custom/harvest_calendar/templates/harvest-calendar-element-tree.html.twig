{#
/**
 * @file
 * Default theme implementation for a form element.
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - errors: (optional) Any errors for this form element, may not be set.
 * - prefix: (optional) The form element prefix, may not be set.
 * - suffix: (optional) The form element suffix, may not be set.
 * - required: The required marker, or empty if the associated form element is
 *   not required.
 * - type: The type of the element.
 * - name: The name of the element.
 * - label: A rendered label element.
 * - label_display: Label display setting. It can have these values:
 *   - before: The label is output before the element. This is the default.
 *     The label includes the #title and the required marker, if #required.
 *   - after: The label is output after the element. For example, this is used
 *     for radio and checkbox #type elements. If the #title is empty but the
 *     field is #required, the label will contain only the required marker.
 *   - invisible: Labels are critical for screen readers to enable them to
 *     properly navigate through forms but can be visually distracting. This
 *     property hides the label for everyone except screen readers.
 *   - attribute: Set the title attribute on the element to create a tooltip but
 *     output no label element. This is supported only for checkboxes and radios
 *     in \Drupal\Core\Render\Element\CompositeFormElementTrait::preRenderCompositeFormElement().
 *     It is used where a visual label is not needed, such as a table of
 *     checkboxes where the row and column provide the context. The tooltip will
 *     include the title and required marker.
 * - description: (optional) A list of description properties containing:
 *    - content: A description of the form element, may not be set.
 *    - attributes: (optional) A list of HTML attributes to apply to the
 *      description content wrapper. Will only be set when description is set.
 * - description_display: Description display setting. It can have these values:
 *   - before: The description is output before the element.
 *   - after: The description is output after the element. This is the default
 *     value.
 *   - invisible: The description is output after the element, hidden visually
 *     but available to screen readers.
 * - disabled: True if the element is disabled.
 * - title_display: Title display setting.
 *
 * @see template_preprocess_form_element()
 *
 * @ingroup themeable
 */
#}
{{ attach_library('harvest_calendar/drupal.harvest_calendar.widget_tree') }}
{% set classes = [
  'js-form-item',
  'form-item',
  'js-form-type-' ~ element['#type']|clean_class,
  'form-item-' ~ element['#name']|clean_class,
  'js-form-item-' ~ element['#name']|clean_class,
  element['#title_display'] not in ['after', 'before'] ? 'form-no-label',
  element['#disabled'] == 'disabled' ? 'form-disabled',
  element['#errors'] ? 'form-item--error',
] %}
{% set description_classes = [
  'description',
  element['#description_display'] == 'invisible' ? 'visually-hidden',
] %}
{% set item_li_attribute = create_attribute() %}
{% set item_li_classes = [
  element['#is_facet'] ? 'facet-item',
] %}
<div{{ attributes.addClass(classes) }}>
  {% if element['#label_display'] in ['before', 'invisible'] %}
    <h4 class="label">
      {{ element['#title'] }}
    </h4>
  {% endif %}
  {% if element['prefix'] is not empty %}
    <span class="field-prefix">{{ element['#prefix'] }}</span>
  {% endif %}
  {% if element['description_display'] == 'before' and description.content %}
    <div{{ element['#description'].attributes }}>
      {{ element['#description'].content }}
    </div>
  {% endif %}
  {{ element['#children'] }}
  {% if element['#suffix'] is not empty %}
    <span class="field-suffix">{{ element['#suffix'] }}</span>
  {% endif %}
  {% if element['#label_display'] == 'after' %}
    {{ element['#label'] }}
  {% endif %}
  {% if element['#errors'] %}
    <div class="form-item--error-message">
      {{ element['#errors'] }}
    </div>
  {% endif %}
  {% if element['#harvest_calendar_tree'] %}
    <div class="harvest_calendar_tree--element">
      <div class="items">
        <ul class="periods item--block">
          {% if element['#harvest_calendar_tree'] %}
            {% for period in element['#harvest_calendar_tree'] %}
              <li class="item--container">
                <div class="item--label label">
                  {{ period.name|t }}
                </div>
                <ul class="months item--block item--block--collapsible">
                  {% if period.children %}
                    {% for month in period.children %}
                      <li class="item--container">
                        <div class="item--label label">
                          {{ month.name|t }}
                        </div>
                        <ul class="months item--block item--block--collapsible">
                          {% if month.children %}
                            {% for key, decade in month.children %}
                              <li{{ item_li_attribute.addClass(item_li_classes) }}>
                                <div class="item--value">
                                  {% set id = decade.id %}
                                  {{ element[id] }}
                                </div>
                              </li>
                            {% endfor %}
                          {% endif %}
                        </ul>
                      </li>
                    {% endfor %}
                  {% endif %}
                </ul>
              </li>
            {% endfor %}
          {% endif %}
        </ul>
      </div>
    </div>
  {% endif %}
  {% if element['#description_display'] in ['after', 'invisible'] and element['#description'].content %}
    <div{{ element['description'].attributes.addClass(description_classes) }}>
      {{ element['description'].content }}
    </div>
  {% endif %}
</div>
